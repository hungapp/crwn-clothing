{"ast":null,"code":"import _objectSpread from \"/Users/hungnguyen/Documents/ztm/crwn-clothing/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/hungnguyen/Documents/ztm/crwn-clothing/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","payload","TOGGLE_CART_HIDDEN","ADD_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAAA,QAC7CC,IAD6C,GAC3BD,MAD2B,CAC7CC,IAD6C;AAAA,QACvCC,OADuC,GAC3BF,MAD2B,CACvCE,OADuC;;AAErD,UAAQD,IAAR;AACE,SAAKT,eAAe,CAACW,kBAArB;AACE,+BACKJ,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,eAAe,CAACY,QAArB;AACE,+BACKL,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBK,OAAlB;AAF1B;;AAIF,SAAKV,eAAe,CAACa,oBAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBN,OAAO,CAACM,EAD3B;AAFb;;AAMF,SAAKhB,eAAe,CAACiB,WAArB;AACE,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBK,OAAlB;AAF/B;;AAIF,SAAKV,eAAe,CAACkB,UAArB;AACE,+BACKX,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOE,KAAP;AA7BJ;AA+BD,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, payload)\n      };\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== payload.id\n        )\n      };\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      };\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}