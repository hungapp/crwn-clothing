{"ast":null,"code":"var _jsxFileName = \"/Users/hungnguyen/Documents/ztm/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionStartAsync = this.props.fetchCollectionStartAsync;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps)(ShopPage);","map":{"version":3,"sources":["/Users/hungnguyen/Documents/ztm/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","fetchCollectionStartAsync","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,kBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,yBADU,GACoB,KAAKC,KADzB,CACVD,yBADU;AAElBA,IAAAA,yBAAyB;AAC1B;;AACDE,EAAAA,MAAM,GAAG;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACE,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEJ,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AA/BoC;;AAkCvC,MAAMK,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Ce,EAAAA,oBAAoB,EAAEb;AADyB,CAAD,CAAhD;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,yBAAyB,EAAE,MAAMQ,QAAQ,CAAClB,0BAA0B,EAA3B;AADH,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACkB,eAAD,CAAP,CAAyBT,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionStartAsync } = this.props;\n    fetchCollectionStartAsync();\n  }\n  render() {\n    const { match, isCollectionFetching } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}