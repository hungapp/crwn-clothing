{"ast":null,"code":"import _objectSpread from \"/Users/hungnguyen/Documents/ztm/crwn-clothing/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { getCurrentUser } from '../../firebase/firebase.util';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.util';\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    yield;\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION);\n}\n\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/hungnguyen/Documents/ztm/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","signInSuccess","signInFailure","getCurrentUser","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,gBAA7C;AAEA,SAASC,cAAT,QAA+B,8BAA/B;AAEA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,8BAJP;;AAMA,UAAUC,gBAAV,GAA6B;AAC3B,MAAI;AAAA,iBACe,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADrB;AAAA,UACMI,IADN,QACMA,IADN;;AAEF,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CAACI,aAAa;AAAGY,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUC,mBAAV,GAAgC;AAC9B,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;;AAED,UAAUW,mBAAV,GAAgC;AAC9B,MAAI;AACF;AACD,GAFD,CAEE,OAAOH,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACK,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;;AAED,UAAUI,kBAAV,GAA+B;AAC7B,QAAMvB,UAAU,CAACI,eAAe,CAACoB,kBAAjB,CAAhB;AACD;;AAED,eAAe,UAAUC,SAAV,GAAsB;AACnC,QAAMtB,GAAG,CAAC,CAACD,IAAI,CAACkB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, call, all } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport { signInSuccess, signInFailure } from './user.actions';\n\nimport { getCurrentUser } from '../../firebase/firebase.util';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from '../../firebase/firebase.util';\n\nfunction* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    yield;\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION);\n}\n\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}